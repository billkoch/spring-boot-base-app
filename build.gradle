buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath("org.flywaydb:flyway-gradle-plugin:3.2.1")
    }
}

plugins {
    id "java"
    id "com.github.samueltbrown.cucumber" version "0.9"
    id "org.flywaydb.flyway" version "3.2"
}

flyway {
    url = 'jdbc:mysql://127.0.0.1/test'
    user = 'myuser'
    password = 'mypass'
}

group = "${System.env.USER}"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'org.flywaydb.flyway'

jar {
    baseName = 'singram-spring-base-app'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile('org.springframework.data:spring-data-rest-webmvc:2.4.1.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-remote-shell")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.flywaydb:flyway-core:3.1")
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]

    runtime("mysql:mysql-connector-java:5.1.6")

    testCompile ("org.springframework.boot:spring-boot-starter-test",
                 "junit:junit")

    cucumberCompile(
                 "info.cukes:cucumber-java:1.2.4",
                 "info.cukes:cucumber-junit:1.2.4",
                 "info.cukes:cucumber-spring:1.2.4")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task buildDocker(type: Docker, dependsOn: build) {
//  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
